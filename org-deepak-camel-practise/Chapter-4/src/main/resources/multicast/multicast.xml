<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">
	
	<!-- This is an standalone example ; no server required to execute this; 
		To execute this example run class MulticastStandaloneClient.java -->
	
	<!-- Multicast pattern is used to route a message to number of endpoint at the same time
	
		The Multicast allows to route the same message to a number of endpoints and process them in a different way. 
		The main difference between the Multicast and Splitter is that Splitter will split the message into several pieces but the Multicast will not modify the request message.
	 -->
	
	<!-- 
		Consider the example of an electronic auction service, where a seller offers an item for sale to a list of buyers. 
		The buyers each put in a bid for the item, and the seller automatically selects the bid with the highest price. 
		You can implement the logic for distributing an offer to a fixed list of buyers using the
	-->
	
	
	
	<bean id = "myAggrgationStrategy" class = "com.camel.multicast.MulticastAggregator"/>
	
	
	<camelContext xmlns="http://camel.apache.org/schema/spring">
		<route>
			<from uri="timer://mytimeobject?period=10000000" />
			<to uri = "direct:process_multicast"/>
			<log message = "final bid is ${header.Bid}"/>
		</route>
		
		<route>
			<!-- 
				 To consolidate the bids received from the various buyers, the multicast processor uses the aggregation strategy. 
				 For this example we have used aggregation stretegy MulticastAggregator(id = myAggrgationStrategy).
				 This aggrgation strategy contains the logic of comparing the bids and select highest bid.
			 -->
			<from uri = "direct:process_multicast"/>
			<multicast strategyRef = "myAggrgationStrategy" parallelProcessing = "true">
				<to uri = "direct:buyer1"/>
				<to uri = "direct:buyer2"/>
				<to uri = "direct:buyer3"/>
			</multicast>
		</route>
		
		<route>
			<from uri = "direct:buyer1"/>
			<log message = "Message processing at site buyer1 "/>
			<setHeader headerName = "Bid">
				<constant>20</constant>
			</setHeader>
		</route>
		
		<route>
			<from uri = "direct:buyer2"/>
			<log message = "Message processing at site buyer2 "/>
			<setHeader headerName = "Bid">
				<constant>10</constant>
			</setHeader>
		</route>
		
		
		<route>
			<from uri = "direct:buyer3"/>
			<log message = "Message processing at site buyer3 "/>
			<setHeader headerName = "Bid">
				<constant>30</constant>
			</setHeader>
		</route>
	</camelContext>

</beans>
